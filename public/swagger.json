{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"CommitmentResponse": {
				"properties": {
					"inscriptionPayload": {
						"type": "string"
					},
					"recipientStxPrincipal": {
						"type": "string"
					},
					"commitTxId": {
						"type": "string"
					},
					"paymentPsbt": {
						"type": "string"
					},
					"commitAddress": {
						"type": "string"
					}
				},
				"required": [
					"commitAddress"
				],
				"type": "object"
			},
			"CommitmentRequest": {
				"properties": {
					"inscriptionPayload": {
						"type": "string"
					},
					"recipientStxPrincipal": {
						"type": "string"
					},
					"originator": {
						"type": "string"
					},
					"payFromAddress": {
						"type": "string"
					},
					"reclaimerPublicKey": {
						"type": "string"
					},
					"revealerPublicKey": {
						"type": "string"
					},
					"revealFee": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"originator",
					"reclaimerPublicKey",
					"revealerPublicKey",
					"revealFee"
				],
				"type": "object"
			},
			"Uint8Array": {
				"description": "A typed array of 8-bit unsigned integer values. The contents are initialized to 0. If the\r\nrequested number of bytes could not be allocated an exception is raised.",
				"properties": {},
				"type": "object",
				"additionalProperties": false
			},
			"TaprootScriptType": {
				"properties": {
					"tweakedPubkey": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"$ref": "#/components/schemas/Uint8Array"
							}
						]
					},
					"tapMerkleRoot": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"$ref": "#/components/schemas/Uint8Array"
							}
						]
					},
					"tapLeafScript": {},
					"tapInternalKey": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"$ref": "#/components/schemas/Uint8Array"
							}
						]
					},
					"leaves": {},
					"wsh": {
						"type": "string"
					},
					"witnessScript": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"$ref": "#/components/schemas/Uint8Array"
							}
						]
					},
					"redeemScript": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"$ref": "#/components/schemas/Uint8Array"
							}
						]
					},
					"paymentType": {
						"type": "string"
					},
					"script": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"$ref": "#/components/schemas/Uint8Array"
							}
						]
					},
					"address": {
						"type": "string"
					}
				},
				"required": [
					"paymentType",
					"address"
				],
				"type": "object"
			},
			"VoutI": {
				"properties": {
					"value": {
						"type": "number",
						"format": "double"
					},
					"scriptpubkey_address": {
						"type": "string"
					},
					"scriptpubkey_type": {
						"type": "string"
					},
					"scriptpubkey_asm": {
						"type": "string"
					},
					"scriptpubkey": {
						"type": "string"
					}
				},
				"required": [
					"value",
					"scriptpubkey_address",
					"scriptpubkey_type",
					"scriptpubkey_asm",
					"scriptpubkey"
				],
				"type": "object"
			},
			"CommitmentType": {
				"properties": {
					"commitTxId": {
						"type": "string"
					},
					"vout": {
						"$ref": "#/components/schemas/VoutI"
					},
					"vout0": {
						"$ref": "#/components/schemas/VoutI"
					},
					"taprootScript": {
						"$ref": "#/components/schemas/TaprootScriptType"
					},
					"requestType": {
						"type": "string"
					},
					"paidFromAddress": {
						"type": "string"
					},
					"updated": {
						"type": "number",
						"format": "double"
					},
					"created": {
						"type": "number",
						"format": "double"
					},
					"status": {
						"type": "number",
						"format": "double"
					},
					"network": {
						"type": "string"
					},
					"tries": {
						"type": "number",
						"format": "double"
					},
					"_id": {
						"type": "string"
					},
					"commitmentRequest": {
						"$ref": "#/components/schemas/CommitmentRequest"
					}
				},
				"required": [
					"taprootScript",
					"requestType",
					"updated",
					"created",
					"status",
					"network",
					"commitmentRequest"
				],
				"type": "object"
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "uasu-api",
		"version": "1.0.0",
		"description": "Proxy server for ordicall web application to access ordinals and bitcoin servers",
		"license": {
			"name": "ISC"
		},
		"contact": {}
	},
	"openapi": "3.0.0",
	"paths": {
		"/revealer-api/v1/config": {
			"get": {
				"operationId": "GetAllParam",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			}
		},
		"/revealer-api/v1/config/{param}": {
			"get": {
				"operationId": "GetParam",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{
											"type": "string"
										},
										{
											"type": "number",
											"format": "double"
										}
									]
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "param",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/revealer-api/v1/commitment/pending/{originator}/{requestType}": {
			"get": {
				"operationId": "GetCommitmentsPendingByOriginator",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CommitmentResponse"
								}
							}
						}
					}
				},
				"description": "Fetches the commitment data for a payment address",
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "originator",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "requestType",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/revealer-api/v1/commitment/{paymentAddress}": {
			"get": {
				"operationId": "GetCommitmentByPaymentAddress",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CommitmentType"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "paymentAddress",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/revealer-api/v1/commitment/inscription": {
			"post": {
				"operationId": "SaveInscriptionCommitment",
				"responses": {
					"200": {
						"description": "CommitmentResponse",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CommitmentResponse"
								}
							}
						}
					}
				},
				"description": "Build and save the commitment data for a taproot inscription. Return the address for invoice.\nIf payFromAddress is provided also returns a payment psbt for the web wallet.",
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CommitmentRequest"
							}
						}
					}
				}
			}
		},
		"/revealer-api/v1/commitment/sbtc-deposit": {
			"post": {
				"operationId": "SaveSBTCCommitment",
				"responses": {
					"200": {
						"description": "CommitmentResponse",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CommitmentResponse"
								}
							}
						}
					}
				},
				"description": "Build and save the commitment data for an sbtc deposit. Return the address for invoice.\nIf payFromAddress is provided also returns a payment psbt for the web wallet.",
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CommitmentRequest"
							}
						}
					}
				}
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}